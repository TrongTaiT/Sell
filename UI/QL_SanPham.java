/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Sell.UI;

import com.Sell.DAO.HinhAnhDao;
import com.Sell.DAO.HoaDonBanHang_Dao;
import com.Sell.DAO.HoaDonNhap_Dao;
import com.Sell.DAO.LoaiHangDAO;
import com.Sell.DAO.SanPhamDAO;
import com.Sell.Helper.DesignHelper;
import com.Sell.entity.HinhAnh;
import com.Sell.entity.SanPham;
import com.Sell.Helper.ImageHelper;
import com.Sell.Helper.MsgBox;
import com.Sell.Helper.ValidationHelper;
import com.Sell.entity.LoaiHang;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trongtai
 */
public class QL_SanPham extends javax.swing.JPanel {

    SanPhamDAO spDAO = new SanPhamDAO();
    int row = -1;
    List<HinhAnh> listHinhAnh = new ArrayList<>();
    List<HinhAnh> listHinhAnhXoa = new ArrayList<>();
    HinhAnhDao haDAO = new HinhAnhDao();
    LoaiHangDAO lhDAO = new LoaiHangDAO();
    HoaDonBanHang_Dao hdbhDAO;
    HoaDonNhap_Dao hdnDAO;   

    /**
     * Creates new form CuaHangJPanel
     */
    public QL_SanPham() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitle = new com.k33ptoo.components.KGradientPanel();
        jLabel6 = new javax.swing.JLabel();
        panelContent = new javax.swing.JPanel();
        panelContents = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        panelSanPham = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        panelInput = new javax.swing.JPanel();
        txtMaSanPham = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtNhaSX = new javax.swing.JTextField();
        cboLoaiHang = new javax.swing.JComboBox<>();
        txtGiaTien = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        panelFunction = new javax.swing.JPanel();
        btnMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        panelDieuKhien = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListHinhAnh = new javax.swing.JList<>();
        btnThemHinhAnh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        lblHinhAnh = new javax.swing.JLabel();
        btnXoaHinhAnh = new javax.swing.JButton();
        cboLoaiSP = new javax.swing.JComboBox<>();
        btnPrevHinh = new javax.swing.JButton();
        btnNextHinh = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1010, 619));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        panelTitle.setkBorderRadius(0);
        panelTitle.setkEndColor(new java.awt.Color(102, 216, 211));
        panelTitle.setkGradientFocus(1000);
        panelTitle.setkStartColor(new java.awt.Color(0, 185, 215));
        panelTitle.setPreferredSize(new java.awt.Dimension(1150, 50));
        panelTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelSanPhamMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("TRANG CHỦ/ QUẢN LÝ SẢN PHẨM");
        jLabel6.setPreferredSize(new java.awt.Dimension(210, 50));

        javax.swing.GroupLayout panelTitleLayout = new javax.swing.GroupLayout(panelTitle);
        panelTitle.setLayout(panelTitleLayout);
        panelTitleLayout.setHorizontalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(804, Short.MAX_VALUE))
        );
        panelTitleLayout.setVerticalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(panelTitle, java.awt.BorderLayout.NORTH);

        panelContent.setBackground(new java.awt.Color(255, 255, 255));
        panelContent.setPreferredSize(new java.awt.Dimension(1010, 540));
        panelContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelSanPhamMouseClicked(evt);
            }
        });
        panelContent.setLayout(new java.awt.CardLayout());

        panelContents.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(335, 50));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ SẢN PHẨM");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelSanPhamMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1044, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        panelContents.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setLayout(new java.awt.CardLayout());

        panelSanPham.setPreferredSize(new java.awt.Dimension(1050, 509));
        panelSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelSanPhamMouseClicked(evt);
            }
        });

        jPanel6.setPreferredSize(new java.awt.Dimension(1020, 499));

        jPanel7.setPreferredSize(new java.awt.Dimension(1010, 475));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelSanPhamMouseClicked(evt);
            }
        });
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMaSanPham.setPreferredSize(new java.awt.Dimension(80, 35));
        txtMaSanPham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaSanPhamFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaSanPhamFocusLost(evt);
            }
        });

        txtTenSP.setPreferredSize(new java.awt.Dimension(80, 35));
        txtTenSP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenSPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenSPFocusLost(evt);
            }
        });

        txtNhaSX.setPreferredSize(new java.awt.Dimension(80, 35));
        txtNhaSX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNhaSXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNhaSXFocusLost(evt);
            }
        });

        cboLoaiHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiHang.setPreferredSize(new java.awt.Dimension(64, 35));

        txtGiaTien.setPreferredSize(new java.awt.Dimension(80, 35));
        txtGiaTien.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGiaTienFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiaTienFocusLost(evt);
            }
        });

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        txtGhiChu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGhiChuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGhiChuFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(txtGhiChu);

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtGiaTien, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(txtNhaSX, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTenSP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboLoaiHang, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addComponent(cboLoaiHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(txtNhaSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(txtGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel7.add(panelInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 320));

        btnMoi.setBackground(new java.awt.Color(51, 255, 255));
        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/refresh-icon.png"))); // NOI18N
        btnMoi.setText(" MỚI");
        btnMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMoi.setPreferredSize(new java.awt.Dimension(120, 30));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(51, 255, 0));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/Add.png"))); // NOI18N
        btnThem.setText(" THÊM");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.setPreferredSize(new java.awt.Dimension(120, 30));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 0, 0));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/Delete.png"))); // NOI18N
        btnXoa.setText(" XÓA");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.setPreferredSize(new java.awt.Dimension(120, 30));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 0));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/UPDATE.png"))); // NOI18N
        btnSua.setText(" SỬA");
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.setPreferredSize(new java.awt.Dimension(120, 30));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFunctionLayout = new javax.swing.GroupLayout(panelFunction);
        panelFunction.setLayout(panelFunctionLayout);
        panelFunctionLayout.setHorizontalGroup(
            panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFunctionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFunctionLayout.createSequentialGroup()
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFunctionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelFunctionLayout.setVerticalGroup(
            panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFunctionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.add(panelFunction, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 325, 270, 100));

        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst.setPreferredSize(new java.awt.Dimension(100, 25));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPrev.setText("<<");
        btnPrev.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrev.setPreferredSize(new java.awt.Dimension(100, 25));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNext.setText(">>");
        btnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext.setPreferredSize(new java.awt.Dimension(100, 25));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLast.setText(">|");
        btnLast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLast.setPreferredSize(new java.awt.Dimension(100, 25));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDieuKhienLayout = new javax.swing.GroupLayout(panelDieuKhien);
        panelDieuKhien.setLayout(panelDieuKhienLayout);
        panelDieuKhienLayout.setHorizontalGroup(
            panelDieuKhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDieuKhienLayout.createSequentialGroup()
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDieuKhienLayout.setVerticalGroup(
            panelDieuKhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDieuKhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel7.add(panelDieuKhien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 432, -1, -1));

        jListHinhAnh.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListHinhAnhMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jListHinhAnh);

        jPanel7.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, 230, 70));

        btnThemHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/btnThemHinhAnh_icons8_add_16px_2.png"))); // NOI18N
        btnThemHinhAnh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHinhAnhActionPerformed(evt);
            }
        });
        jPanel7.add(btnThemHinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, 30, -1));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSanPham);

        jPanel7.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 490, 400));

        lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setToolTipText("");
        lblHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        jPanel7.add(lblHinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 190, 240));

        btnXoaHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/btnXoaHinhAnh_icons8_delete_16px.png"))); // NOI18N
        btnXoaHinhAnh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoaHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHinhAnhActionPerformed(evt);
            }
        });
        jPanel7.add(btnXoaHinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 30, -1));

        cboLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSPActionPerformed(evt);
            }
        });
        jPanel7.add(cboLoaiSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, 240, -1));

        btnPrevHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/btnPrev-QLHDBanHang-Actions-arrow-left-icon.png"))); // NOI18N
        btnPrevHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevHinhActionPerformed(evt);
            }
        });
        jPanel7.add(btnPrevHinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 20, -1));

        btnNextHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Sell/icons/btnNext-QLHDBanHang-Actions-arrow-right-icon.png"))); // NOI18N
        btnNextHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextHinhActionPerformed(evt);
            }
        });
        jPanel7.add(btnNextHinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 20, -1));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        panelSanPham.add(jPanel6);

        jPanel4.add(panelSanPham, "card2");

        panelContents.add(jPanel4, java.awt.BorderLayout.CENTER);

        panelContent.add(panelContents, "card2");

        add(panelContent, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        this.requestFocusInWindow();
    }//GEN-LAST:event_formFocusGained

    private void panelSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelSanPhamMouseClicked
        JComponent component = (JComponent) evt.getSource();
        component.requestFocus();
    }//GEN-LAST:event_panelSanPhamMouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        
        this.row = tblSanPham.getSelectedRow();
        this.edit();
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnThemHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHinhAnhActionPerformed
        addImageToList();
    }//GEN-LAST:event_btnThemHinhAnhActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void txtGhiChuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGhiChuFocusLost
        if (txtGhiChu.getText().trim().length() == 0) {
            DesignHelper.addPlaceHolderTextField(txtGhiChu, "Ghi chú");
        }
    }//GEN-LAST:event_txtGhiChuFocusLost

    private void txtGhiChuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGhiChuFocusGained
        if (txtGhiChu.getText().equals("Ghi chú")) {
            DesignHelper.deletePlaceHolderTextField(txtGhiChu);
        }
    }//GEN-LAST:event_txtGhiChuFocusGained

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void txtGiaTienFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiaTienFocusLost
        if (txtGiaTien.getText().trim().length() == 0) {
            DesignHelper.addPlaceHolderTextField(txtGiaTien, "Giá tiền");
        }
    }//GEN-LAST:event_txtGiaTienFocusLost

    private void txtGiaTienFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiaTienFocusGained
        if (txtGiaTien.getText().equals("Giá tiền")) {
            txtGiaTien.setText("");
            DesignHelper.deletePlaceHolderTextField(txtGiaTien);
        }
    }//GEN-LAST:event_txtGiaTienFocusGained

    private void txtNhaSXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNhaSXFocusLost
        if (txtNhaSX.getText().trim().length() == 0) {
            DesignHelper.addPlaceHolderTextField(txtNhaSX, "Nhà sản xuất");
        }
    }//GEN-LAST:event_txtNhaSXFocusLost

    private void txtNhaSXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNhaSXFocusGained
        if (txtNhaSX.getText().equals("Nhà sản xuất")) {
            txtNhaSX.setText("");
            DesignHelper.deletePlaceHolderTextField(txtNhaSX);
        }
    }//GEN-LAST:event_txtNhaSXFocusGained

    private void txtTenSPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenSPFocusLost
        if (txtTenSP.getText().trim().length() == 0) {
            txtTenSP.setText("Tên sản phẩm");
            DesignHelper.addPlaceHolderTextField(txtTenSP);
        }
    }//GEN-LAST:event_txtTenSPFocusLost

    private void txtTenSPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenSPFocusGained
        if (txtTenSP.getText().equals("Tên sản phẩm")) {
            DesignHelper.deletePlaceHolderTextField(txtTenSP);
        }
    }//GEN-LAST:event_txtTenSPFocusGained

    private void txtMaSanPhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaSanPhamFocusLost
        if (txtMaSanPham.getText().trim().length() == 0) {
            DesignHelper.addPlaceHolderTextField(txtMaSanPham, "Mã sản phẩm");
        }
    }//GEN-LAST:event_txtMaSanPhamFocusLost

    private void txtMaSanPhamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaSanPhamFocusGained
        if (txtMaSanPham.getText().equals("Mã sản phẩm")) {
            DesignHelper.deletePlaceHolderTextField(txtMaSanPham);
        }
    }//GEN-LAST:event_txtMaSanPhamFocusGained

    private void jListHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListHinhAnhMouseClicked
        hienHinhAnh();
    }//GEN-LAST:event_jListHinhAnhMouseClicked

    private void btnXoaHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHinhAnhActionPerformed
        xoaHinhAnh();
    }//GEN-LAST:event_btnXoaHinhAnhActionPerformed

    private void cboLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSPActionPerformed
        fillToTableSanPham();
    }//GEN-LAST:event_cboLoaiSPActionPerformed

    private void btnPrevHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevHinhActionPerformed
        if (listHinhAnh.size() <= 0) {
            return;
        }
        int index = jListHinhAnh.getSelectedIndex();

        switch (index) {
            case -1:
                index = 0;
                break;
            case 0:
                index = listHinhAnh.size() - 1;
                break;
            default:
                index--;
                break;
        }
        lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh, listHinhAnh.get(index).getHinhAnh()));
        jListHinhAnh.setSelectedIndex(index);
    }//GEN-LAST:event_btnPrevHinhActionPerformed

    private void btnNextHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextHinhActionPerformed
        if (listHinhAnh.size() <= 0) {
            return;
        }
        int index = jListHinhAnh.getSelectedIndex();

        if (index == -1) {
            index = 0;
        } else if (index < listHinhAnh.size() - 1) {
            index++;
        } else {
            index = 0;
        }
        lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh, listHinhAnh.get(index).getHinhAnh()));
        jListHinhAnh.setSelectedIndex(index);
    }//GEN-LAST:event_btnNextHinhActionPerformed

    public static void main(String[] args) {
        new QL_SanPham().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnNextHinh;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnPrevHinh;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemHinhAnh;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaHinhAnh;
    private javax.swing.JComboBox<String> cboLoaiHang;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jListHinhAnh;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JPanel panelContent;
    private javax.swing.JPanel panelContents;
    private javax.swing.JPanel panelDieuKhien;
    private javax.swing.JPanel panelFunction;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel panelSanPham;
    private com.k33ptoo.components.KGradientPanel panelTitle;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGiaTien;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtNhaSX;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setTable();
        fillTable();
        fillCombobox();
        fillComboboxLoaiSP();
        fillToTableSanPham();
        clearForm();
        setTextField();
        jListHinhAnh.removeAll();
    }

    private void setTextField() {
        DesignHelper.addPlaceHolderTextField(txtMaSanPham, "Mã sản phẩm");
        DesignHelper.addPlaceHolderTextField(txtTenSP, "Tên sản phẩm");
        DesignHelper.addPlaceHolderTextField(txtNhaSX, "Nhà sản xuất");
        DesignHelper.addPlaceHolderTextField(txtGiaTien, "Giá tiền");
        DesignHelper.addPlaceHolderTextField(txtGhiChu, "Ghi chú");
    }

    private void setPlaceHolderForSetForm() {
        DesignHelper.deletePlaceHolderTextField(txtMaSanPham);
        Font font = txtMaSanPham.getFont();
        font = font.deriveFont(Font.BOLD);
        txtMaSanPham.setFont(font);
        DesignHelper.deletePlaceHolderTextField(txtTenSP);
        DesignHelper.deletePlaceHolderTextField(txtNhaSX);
        DesignHelper.deletePlaceHolderTextField(txtGhiChu);
        DesignHelper.deletePlaceHolderTextField(txtGiaTien);
    }

    private void setTable() {
//        DefaultTableModel model = new DefaultTableModel();
//
//        model.addColumn("MÃ SP");
//        model.addColumn("TÊN SP");
//        model.addColumn("NHÀ SX");
//        model.addColumn("GIÁ TIỀN");
//
//        tblSanPham.setModel(model);
        String columns[] = {"MÃ SP", "TÊN SP", "NHÀ SX", "GIÁ TIỀN"};
        DesignHelper.setTable(tblSanPham, columns);
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        try {
            List<SanPham> list = spDAO.selectAll();
            for (SanPham sp : list) {
                if (!sp.getMaSanPham().equals("(Mã SP)")) {
                    model.addRow(new Object[]{
                        sp.getMaSanPham(),
                        sp.getTenSP(),
                        sp.getNhaSX(),
                        String.format("%.2f", sp.getGiaTien())
                    });
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    void fillCombobox() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiHang.getModel();

        model.removeAllElements();
        List<LoaiHang> list = lhDAO.selectAll();
        model.addElement(new LoaiHang("Tất cả", "Loại Hàng ", "cửa hàng"));
        for (LoaiHang lh : list) {
            model.addElement(lh);
        }
    }

    private SanPham getForm() {
        SanPham sp = new SanPham();
        LoaiHang lh = (LoaiHang) cboLoaiHang.getSelectedItem();

        sp.setMaSanPham(txtMaSanPham.getText());
        sp.setTenSP(txtTenSP.getText());
        sp.setNhaSX(txtNhaSX.getText());
        sp.setGhiChu(txtGhiChu.getText());
        sp.setMaLoai(lh.getMaLoai());
        sp.setGiaTien(Float.parseFloat(txtGiaTien.getText()));
        return sp;
    }

    private void setForm(SanPham sp) {
        resetBorder();
        txtMaSanPham.setText(sp.getMaSanPham());
        txtTenSP.setText(sp.getTenSP());
        txtNhaSX.setText(sp.getNhaSX());
        txtGhiChu.setText(sp.getGhiChu());
        LoaiHang lh = lhDAO.selectById(sp.getMaLoai());
        if (lh != null) {
            cboLoaiHang.setSelectedItem(lh);
        } else {
            cboLoaiHang.setSelectedIndex(0);
        }
        txtGiaTien.setText(String.format("%.2f", sp.getGiaTien()));
    }

    private void edit() {
        if (this.row < 0) {
            return;
        }
        tblSanPham.setRowSelectionInterval(row, row);

        // đổ sp lên form
        String maSP = (String) tblSanPham.getValueAt(this.row, 0);
        SanPham sp = spDAO.selectById(maSP);
        this.setPlaceHolderForSetForm();
        this.setForm(sp);

        // đổ hình ảnh lên form
        editHinhAnh(maSP);

        this.updateStatus();
    }

    private void editHinhAnh(String maSP) {
        listHinhAnhXoa.removeAll(listHinhAnhXoa);
        listHinhAnh.removeAll(listHinhAnh);
        listHinhAnh = haDAO.selectAllById(maSP);
        System.out.println(listHinhAnh);
        fillElementToJListHinhAnh();
//        if (!listHinhAnh.isEmpty()) {
//            lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh, listHinhAnh.get(0).getHinhAnh()));
////            jListHinhAnh.setSelectionInterval(0, 0);
//            jListHinhAnh.setSelectedIndex(0);
//        } else {
//            jListHinhAnh.setSelectedIndex(-1);
//            ImageHelper.setDefaultImage(lblHinhAnh);
//        }
    }

    private void fillElementToJListHinhAnh() {
        DefaultListModel listModel = new DefaultListModel();
        listModel.removeAllElements();
        int index = -1;
        if (!listHinhAnh.isEmpty()) {
            for (HinhAnh ha : listHinhAnh) {
                listModel.addElement(ha);
            }
            lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh, listHinhAnh.get(0).getHinhAnh()));
            index = 0;
        } else {
            ImageHelper.setDefaultImage(lblHinhAnh);
        }
        jListHinhAnh.setModel(listModel);
        jListHinhAnh.setSelectedIndex(index);
    }

    void insert() {
        if (validates() == false) {
            return;
        }
        if (ValidationHelper.isNotDuplicatedID(this, txtMaSanPham, "Mã sản phẩm",
                spDAO.selectById(txtMaSanPham.getText())) == false) {
            return;
        }
        try {
            // Thêm sản phẩm vào db
            SanPham sp = getForm();
            spDAO.insert(sp);

            // Thêm hình ảnh vào db
            if (!listHinhAnh.isEmpty()) {
                for (HinhAnh ha : listHinhAnh) {
                    ha.setMaSanPham(sp.getMaSanPham());
                    haDAO.insert(ha);
                }
            }
            this.fillTable();

            
            MsgBox.alert(this, "Thêm sản phẩm thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm sản phẩm thất bại");
        }
    }

    void update() {
        if (validates() == false) {
            return;
        }
        try {
            // Sửa sản phẩm vào db
            SanPham sp = getForm();
            spDAO.update(sp);
            this.fillTable();

            // Thêm hình mới ở danh sách hình listHinhAnhThem
            if (!listHinhAnh.isEmpty()) {
                for (HinhAnh ha : listHinhAnh) {
                    if (ha.getMaSanPham() == null) {
                        ha.setMaSanPham(sp.getMaSanPham());
                        haDAO.insert(ha);
                    }
                }
            }
            // Xoá hình ở danh sách hình cần xoá listHinhAnhXoa
            if (!listHinhAnhXoa.isEmpty()) {
                for (HinhAnh ha : listHinhAnhXoa) {
                    if (ha.getMaHinhAnh() > 0) {
                        haDAO.delete(ha);
                    }
                }
            }

            MsgBox.alert(this, "Sửa sản phẩm thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Sửa sản phẩm thất bại");
        }
    }

    void delete() {
        try {
            String maSP = txtMaSanPham.getText();
            // xoá SP trong db
            spDAO.delete(maSP);

            // hình ảnh tự xoá trong DB, khoá ngoại MaSanPham ON DELETE CASCADE
            fillTable();
            clearForm();
            fillElementToJListHinhAnh();

            MsgBox.alert(this, "Xoá sản phẩm thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Đã tồn tại sản phẩm này ở Hoá đơn bán hoặc Hoá đơn nhập hàng");
        }
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblSanPham.getRowCount() - 1);

        // trạng thái form
        txtMaSanPham.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnXoa.setEnabled(edit);
        btnSua.setEnabled(edit);

        // điều khiển
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);

        // nút trạng thái
        DesignHelper.setButtonBackgroundColor(btnThem, new Color(51, 255, 0), new Color(102, 255, 102));
        DesignHelper.setButtonBackgroundColor(btnXoa, new Color(255, 0, 0), new Color(255, 102, 102));
        DesignHelper.setButtonBackgroundColor(btnSua, new Color(255, 255, 0), new Color(255, 255, 153));

        // nút điều khiển
        DesignHelper.setButtonBackgroundColor(new Color(153, 204, 255), new Color(204, 255, 255),
                btnFirst, btnPrev, btnNext, btnLast);
    }

    private void clearForm() {
        this.row = -1;
        SanPham sp = new SanPham();
        setForm(sp);
        setTextField();
        updateStatus();
        tblSanPham.clearSelection();

        listHinhAnh.removeAll(listHinhAnh);
        listHinhAnhXoa.removeAll(listHinhAnhXoa);
        fillElementToJListHinhAnh();
        ImageHelper.setDefaultImage(lblHinhAnh);
        resetBorder();
    }
    
    private void resetBorder() {
        ValidationHelper.resetBorderColor(cboLoaiHang, txtMaSanPham, txtTenSP,
                txtNhaSX, txtGiaTien, txtGhiChu);
    }

    private void addImageToList() {
        JFileChooser chooser = new JFileChooser("src\\com\\SELL\\Images");
        chooser.setMultiSelectionEnabled(true);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "jpeg", "png");
        chooser.setFileFilter(filter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            // Thêm hình ảnh vào listHinhAnh
            File[] files = chooser.getSelectedFiles();
            for (File file : files) {
                HinhAnh hinhAnh = new HinhAnh();
//                    hinhAnh.setMaSanPham(txtMaSanPham.getText()); // chưa biết Mã sản phẩm
                String tempImagePath = file.getAbsolutePath();
                hinhAnh.setHinhAnh(ImageHelper.convertToByteArray(tempImagePath));

                hinhAnh.setTenHinhAnh(file.getName());
                listHinhAnh.add(hinhAnh);
            }
            fillElementToJListHinhAnh();
            // hiển thị hình ảnh lên lblHinhAnh
            lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh,
                    listHinhAnh.get(listHinhAnh.size() - 1).getHinhAnh()));
            jListHinhAnh.setSelectedIndex(listHinhAnh.size() - 1);
        }
    }

    private void hienHinhAnh() {
        if (jListHinhAnh.getSelectedIndex() < 0) {
            return;
        }
        lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh,
                listHinhAnh.get(jListHinhAnh.getSelectedIndex()).getHinhAnh()));
    }

    private void xoaHinhAnh() {
        int selectedIndex = jListHinhAnh.getSelectedIndex();
        if (selectedIndex < 0) {
            return;
        }
        // thêm objectHinhAnh vào danh sách cần xoá
        listHinhAnhXoa.add(listHinhAnh.get(selectedIndex));

        // xoá object HinhAnh đã được chọn trong danh sách mảng
        listHinhAnh.remove(selectedIndex);
        fillElementToJListHinhAnh();

        // nếu danh sách vẫn còn HinhAnh hiển thị hình ảnh đầu tiên lên sau khi xoá
        if (!listHinhAnh.isEmpty()) {
            lblHinhAnh.setIcon(ImageHelper.revertFromArrayByte(lblHinhAnh,
                    listHinhAnh.get(0).getHinhAnh()));
            jListHinhAnh.setSelectedIndex(0);
        } else {
            ImageHelper.setDefaultImage(lblHinhAnh);
        }
    }

    private void fillToTableSanPham() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);

        try {
            if (cboLoaiSP.getSelectedIndex() == 0) {
                List<SanPham> loaiHangALL = spDAO.selectByMaLoaiHang("");
                for (SanPham sp : loaiHangALL) {
                    Object[] rowData = {
                        sp.getMaSanPham(), 
                        sp.getTenSP(), 
                        sp.getNhaSX(), 
                        DesignHelper.formatCurrency(sp.getGiaTien()), 
                        sp.getGhiChu()
                    };
                    model.addRow(rowData);
                }
            } else {
                LoaiHang loaiHang = (LoaiHang) cboLoaiSP.getSelectedItem();
                if (loaiHang != null) {
                    List<SanPham> list = spDAO.selectByMaLoaiHang(loaiHang.getMaLoai());
                    for (SanPham sp : list) {
                        Object[] rowData = {
                            sp.getMaSanPham(), 
                            sp.getTenSP(), 
                            sp.getNhaSX(), 
                            DesignHelper.formatCurrency(sp.getGiaTien()), 
                            sp.getGhiChu()
                        };
                        model.addRow(rowData);
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillComboboxLoaiSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSP.getModel();
        model.removeAllElements();
        List<LoaiHang> list = lhDAO.selectAll();
        model.addElement(new LoaiHang("Tất cả", "Tất cả ", "cửa hàng"));
        for (LoaiHang cd : list) {
            model.addElement(cd);
        }
    }

    void first() {
        row = 0;
        edit();
    }

    void prev() {
        if (row > 0) {
            row--;
            edit();
        }
    }

    void next() {
        if (row < tblSanPham.getRowCount() - 1) {
            row++;
            edit();
        }
    }

    void last() {
        row = tblSanPham.getRowCount() - 1;
        edit();
    }

    private boolean validates() {
        if (ValidationHelper.isPickedCombobox(this, cboLoaiHang, "Loại sản phẩm") == false) {
            return false;
        }
        if (ValidationHelper.isValidLength(this, txtMaSanPham, "Mã sản phẩm", 7) == false) {
            return false;
        }
        if (ValidationHelper.isValidLength(this, txtTenSP, "Tên sản phẩm", 225) == false) {
            return false;
        }
        if (ValidationHelper.isValidLength(this, txtNhaSX, "Nhà sản xuất", 225) == false) {
            return false;
        }
        if (ValidationHelper.isNumberField(this, txtGiaTien, "Giá tiền", 0.0) == false) {
            return false;
        }
        if (ValidationHelper.isValidLengthNullableField(this, txtGhiChu, "Ghi chú", 225) == false) {
            return false;
        }
        if (listHinhAnh.isEmpty()) {
            MsgBox.alert(this, "Chọn ảnh cho sản phẩm!");
            return false;
        }
        return true;
    }
    
}
